{"version":3,"sources":["CityData/Areas.js","Components/GoogleAnalyticsTag.js","Constants.js","Components/FAQModal.js","Components/AddNewPlaceModal.js","Components/SuggestedPlaceCards.js","Components/NeighborhoodCards.js","Components/ShareOptions.js","App.js","serviceWorker.js","index.js"],"names":["Areas","sf","eastbay","southbay","marin","toronto","GoogleAnalyticsTag","Constants","AddPlaceURL","FAQEntry","props","getBody","__html","body","state","expanded","style","cursor","onClick","event","setState","this","title","dangerouslySetInnerHTML","React","Component","FAQModal","renderLink","url","text","target","addPlaceLink","consumerFAQs","bizFAQs","visible","shouldShow","onOk","onClose","width","onCancel","footer","map","faq","key","AddNewPlaceModal","PlaceCard","place","xs","className","backgroundImage","imageURL","paddingLeft","placeID","giftCardURL","href","NeighborhoodCards","useState","suggestedPlaces","setSuggestedPlaces","loading","setLoading","moreAvailable","setMoreAvailable","offset","setOffset","search","setSearch","getPlaces","a","fetch","res","json","data","console","log","prevState","useEffect","minLength","debounceTimeout","onChange","e","value","onKeyDown","placeholder","length","textAlign","gutter","justifyContent","shape","size","ShareOptions","appId","handleClick","marginLeft","window","open","axios","defaults","xsrfCookieName","xsrfHeaderName","Title","Typography","App","path","location","pathname","slice","toLowerCase","currentArea","faqVisible","shareVisible","addPlaceVisible","selfRef","createRef","history","pushState","marginTop","hideFAQModal","maxWidth","margin","span","float","color","level","showFAQModal","display","marginRight","content","padding","sm","lg","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.438cfb26.chunk.js","sourcesContent":["const Areas = {\n  sf: \"San Francisco\",\n  eastbay: \"East Bay\",\n  southbay: \"South Bay\",\n  marin: \"Marin\",\n  toronto: \"Toronto\"\n};\n\nexport default Areas;\n","import useScript from \"../lib/useScript\";\n\nfunction GoogleAnalyticsTag(props) {\n  const [loaded] = useScript(\n    \"https://www.googletagmanager.com/gtag/js?id=\" + props.analyticsID\n  );\n  if (loaded) {\n    window.dataLayer = window.dataLayer || [];\n    window.gtag = function() {\n      window.dataLayer.push(arguments);\n    };\n    window.gtag(\"js\", new Date());\n\n    window.gtag(\"config\", \"UA-157264978-1\");\n  } else {\n    window.gtag = function() {};\n    window.ga = function() {};\n  }\n  return null;\n}\n\nexport default GoogleAnalyticsTag;\n","const Constants = {\n  AddPlaceURL: \"/addplace\"\n};\n\nexport default Constants;\n","import React from \"react\";\nimport { Modal } from \"antd\";\nimport Constants from \"../Constants\";\n\nclass FAQEntry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: false\n    };\n  }\n\n  getBody = () => {\n    return { __html: this.props.body };\n  };\n\n  render() {\n    return (\n      <>\n        <h3\n          style={{ cursor: \"pointer\" }}\n          onClick={event => this.setState({ expanded: !this.state.expanded })}\n        >\n          {this.props.title}\n        </h3>\n        {this.state.expanded && (\n          <p dangerouslySetInnerHTML={this.getBody()}></p>\n        )}\n      </>\n    );\n  }\n}\n\nfunction FAQModal(props) {\n  function renderLink(url, text, target) {\n    target = target || \"_blank\";\n    return \"<a target='\" + target + \"' href='\" + url + \"'>\" + text + \"</a>\";\n  }\n\n  function addPlaceLink(text) {\n    return renderLink(Constants.AddPlaceURL, text, \"_self\");\n  }\n\n  const consumerFAQs = [\n    {\n      title: \"What is LoveLocals?\",\n      body:\n        \"Love Local is a directory of gift cards for purchase at local Toronto based restaurants and coffee shops. It’s our hope that by providing this resource, we’ll be able to mobilize loyal customers to provide much-needed support for their favorite places in town. We also link to staff donation sites, if they are available.\"\n    },\n\n    {\n      title:\n        \"How else can I support our local businesses beyond purchasing a gift card?\",\n      body:\n        \"Takeout and delivery are great options (as long as they are done safely)! We encourage you to tip generously if you can. The employees preparing and delivering your food during this time are putting their health at risk and tipping is a great way to show appreciation for the work they are doing. \"\n    },\n    {\n      title: \"Why is this just for the Toronto? Can you do this for my city?\",\n      body:\n        \"As San Francisco natives, we started this project for our community. Over the past days, people have launched similar tools for their specific cities, or even nationally. Check out \" +\n        renderLink(\"https://helpmainstreet.com/\", \"Help Main Street\") +\n        \", \" +\n        renderLink(\"https://givelocal.co/\", \"GiveLocal\") +\n        \", and \" +\n        renderLink(\n          \"https://rallyforrestaurants.com/\",\n          \"Rally for Restaurants\"\n        ) +\n        \".\"\n    }\n  ];\n  const bizFAQs = [\n    {\n      title: \"Why isn’t my business showing up in your search results?\",\n      body:\n        \"Please help us add your Bay Area food/beverage business \" +\n        addPlaceLink(\"here\") +\n        \". We're open to adding more small business categories if this catches on.\"\n    },\n    {\n      title:\n        \"My business offers gift certificates, but your site says we don’t\",\n      body: \"Please let us know the details \" + addPlaceLink(\"here\") + \".\"\n    },\n    {\n      title:\n        \"I'm running a GoFundMe for my staff, and I'd like to list it on your site\",\n      body:\n        \"Please drop us a note via email at \" +\n        renderLink(\"mailto:info@saveourfaves.org\", \"info@saveourfaves.org\")\n    },\n    {\n      title: \"How can I start offering online gift cards?\",\n      body:\n        \"The first step is to check with your POS provider. Many offer their own gift card features (e.g. Square, Toast, ShopKeep), and others integrate with specific third-party providers. If your POS provider doesn’t offer gift cards or integrate with third-party providers, there are some reasonable standalone eGift Card apps like GiftUp or GiftFly. If you’re considering other options, make sure that your business receives the fee for the gift card as soon as the customer purchases the card (otherwise that won’t help you during the crisis). Some services may also ask customers to pay an additional fee when they buy a gift card but be sure it’s a small amount.\"\n    },\n    {\n      title: \"How can I encourage customers to buy gift cards?\",\n      body:\n        \"People are looking for ways they can support their favorite businesses, so don’t be afraid to let them know that gift cards will help. Reach out to your community on Facebook, Twitter, and Instagram, and use your email list to get in touch with your customers. Ask them to consider buying a gift card for one month of spending to help you weather this storm and keep paying staff, so that you can continue offering great food/coffee/etc. for years to come.\"\n    }\n  ];\n  return (\n    <Modal\n      title=\"FAQs\"\n      visible={props.shouldShow}\n      onOk={props.onClose}\n      width=\"80%\"\n      onCancel={props.onClose}\n      footer={<span></span>}\n    >\n      <h2>For Restaurant-goers</h2>\n      {consumerFAQs.map(faq => (\n        <FAQEntry key={faq.title} title={faq.title} body={faq.body} />\n      ))}\n      <h2>For Businesses</h2>\n      {bizFAQs.map(faq => (\n        <FAQEntry key={faq.title} title={faq.title} body={faq.body} />\n      ))}\n    </Modal>\n  );\n}\n\nexport default FAQModal;\n","import React, { useState } from \"react\";\nimport { Modal } from \"antd\";\nimport axios from \"axios\";\nimport { LogEngagementEvent } from \"../Logging\";\nimport Config from \"../Config\";\nimport useScript from \"../lib/useScript\";\nimport GooglePlacesAutocomplete from \"react-google-places-autocomplete\";\n// If you want to use the provided css\n// import 'react-google-places-autocomplete/dist/assets/index.css';\n\n// TODO this shares a lot of logic with AddLinkModal.js\n\nexport function AddNewPlaceModal(props) {\n  const [giftLink, setGiftLink] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [placeDetails, setPlaceDetails] = useState(null);\n  var googleURL =\n    \"https://maps.googleapis.com/maps/api/js?key=\" +\n    Config.GoogleAPIKey +\n    \"&libraries=places\";\n  const [scriptLoaded] = useScript(googleURL);\n\n  const [hasSubmitted, setHasSubmitted] = useState(false);\n  // this Counter is a hack so we can have two 'pages' in this Modal\n  const [counter, setCounter] = useState(0);\n  function resetAndClose() {\n    setGiftLink(\"\");\n    setEmail(\"\");\n    setHasSubmitted(false);\n    setCounter(0);\n    props.onClose();\n  }\n  function closeSoon() {\n    window.setTimeout(() => {\n      resetAndClose();\n    }, 5000);\n  }\n  function handleLinkSubmission() {\n    if (!placeDetails) {\n      setError(\"Please select a place above.\");\n      return;\n    }\n    setHasSubmitted(true);\n    LogEngagementEvent(\"user-action\", \"submitted-new-place\");\n    setCounter(1);\n    axios\n      .post(\"/api/places/submit_new_place\", {\n        place_details: placeDetails,\n        email: email,\n        gift_card_url: giftLink\n      })\n      .then(response => {\n        closeSoon();\n      })\n      .catch(error => {\n        if (\n          error.response &&\n          error.response.data &&\n          error.response.data.error\n        ) {\n          setError(error.response.data.error);\n          setHasSubmitted(false);\n          setCounter(0);\n        } else {\n          closeSoon();\n        }\n      });\n  }\n  return (\n    <Modal\n      title={<span>Add a New Bay Area Small Business</span>}\n      visible={props.shouldShow}\n      onOk={args => {\n        counter === 0 ? handleLinkSubmission() : resetAndClose();\n      }}\n      width=\"600px\"\n      destroyOnClose={true}\n      okButtonProps={{ shape: \"round\", className: \"primary-button\" }}\n      cancelButtonProps={{ shape: \"round\" }}\n      okText={hasSubmitted ? \"Done\" : \"Submit\"}\n      onCancel={resetAndClose}\n    >\n      {hasSubmitted && (\n        <div>\n          Thanks! We'll add this to our queue and add the listing as soon as\n          possible.\n        </div>\n      )}\n      {!scriptLoaded && <div>Loading...</div>}\n      {scriptLoaded && !hasSubmitted && (\n        <div>\n          <GooglePlacesAutocomplete\n            onSelect={selected => {\n              setError(null);\n              setPlaceDetails(selected);\n            }}\n            placeholder={\"Find the business\"}\n            inputClassName={\"add-link-modal-input\"}\n            autocompletionRequest={{\n              types: [\"establishment\"],\n              location: { lat: 37.2865732484, lng: -121.8287260832 },\n              radius: 5000,\n              componentRestrictions: {\n                country: \"us\"\n              }\n            }}\n            types={[\"establishment\"]}\n          />\n          <input\n            className=\"add-link-modal-input\"\n            onChange={event => {\n              setGiftLink(event.target.value);\n            }}\n            type=\"text\"\n            placeholder=\"Gift Card Link (if you know it)\"\n            value={giftLink}\n          />\n          <input\n            className=\"add-link-modal-input\"\n            onChange={event => {\n              setEmail(event.target.value);\n            }}\n            type=\"text\"\n            placeholder=\"Contact Email (optional)\"\n            value={email}\n          />\n          {error && <div style={{ marginTop: 8 }}>{error}</div>}\n        </div>\n      )}\n    </Modal>\n  );\n}\n\nexport default AddNewPlaceModal;\n","import React from \"react\";\nimport { Button, Row, Col } from \"antd\";\n\nconst PlaceCard = ({ place }) => {\n  return (\n    <Col xs={12}>\n      <Row className=\"place-card\">\n        <Col xs={8} className=\"place-container\">\n          <div\n            className=\"place-image\"\n            style={{\n              backgroundImage: \"url(\" + place.imageURL + \")\"\n            }}\n          ></div>\n        </Col>\n        <Col xs={16} style={{ paddingLeft: 10 }}>\n          <h3>{place.placeID}</h3>\n          <div>\n            {place.giftCardURL && (\n              <Button href={place.giftCardURL} target=\"_blank\">\n                Buy Gift Card\n              </Button>\n            )}\n          </div>\n        </Col>\n      </Row>\n    </Col>\n  );\n};\n\nexport default PlaceCard;\n","import React, { useState, useEffect } from \"react\";\nimport { Typography, Button, Row, Spin } from \"antd\";\nimport PlaceCard from \"./SuggestedPlaceCards\";\nimport { DebounceInput } from \"react-debounce-input\";\n\nconst NeighborhoodCards = ({}) => {\n  const perPage = 15;\n  const [suggestedPlaces, setSuggestedPlaces] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [moreAvailable, setMoreAvailable] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  const searchChange = e => {\n    const { value } = e.target;\n\n    setOffset(0);\n    setSuggestedPlaces([]);\n    setSearch(value);\n  };\n\n  const getPlaces = async () => {\n    const res = await fetch(\n      `/api/places/by_neighborhood?offset=${offset}&search=${search}`\n    );\n    const data = await res.json();\n\n    setLoading(false);\n\n    console.log(data);\n    setSuggestedPlaces(prevState => [...prevState, ...data.suggestedPlaces]);\n    setMoreAvailable(data.moreAvailable);\n\n    setOffset(prevState => prevState + perPage);\n  };\n\n  useEffect(() => {\n    getPlaces();\n  }, [search]);\n\n  const onLoadMore = () => {\n    getPlaces();\n  };\n\n  return (\n    <>\n      <DebounceInput\n        minLength={2}\n        debounceTimeout={800}\n        onChange={searchChange}\n        onKeyDown={e => {\n          setLoading(true);\n        }}\n        placeholder=\"Search Toronto's restaurants, coffee shops, etc.\"\n        className=\"search-bar\"\n      />\n\n      {!loading && suggestedPlaces && suggestedPlaces.length > 0 && (\n        <div style={{ textAlign: \"center\" }}>\n          <Row gutter={16} style={{ justifyContent: \"center\" }}>\n            {suggestedPlaces.map(place => {\n              return <PlaceCard place={place} />;\n            })}\n          </Row>\n\n          {moreAvailable && (\n            <Button\n              className=\"primary-button\"\n              shape=\"round\"\n              size=\"default\"\n              onClick={onLoadMore}\n            >\n              Load More\n            </Button>\n          )}\n        </div>\n      )}\n\n      {loading && <Spin />}\n\n      {suggestedPlaces && suggestedPlaces.length === 0 && <p>No results</p>}\n    </>\n  );\n};\n\nexport default NeighborhoodCards;\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { FacebookProvider, Share } from \"react-facebook\";\nexport class ShareOptions extends React.Component {\n  shareToFB() {}\n  render() {\n    return (\n      <div>\n        <FacebookProvider appId=\"202370887681802\">\n          <Share href=\"https://saveourfaves.org\">\n            {({ handleClick, loading }) => (\n              <Button\n                onClick={handleClick}\n                shape=\"round\"\n                className=\"secondary-button\"\n              >\n                Facebook\n              </Button>\n            )}\n          </Share>\n        </FacebookProvider>\n\n        <Button\n          style={{ marginLeft: 12 }}\n          shape=\"round\"\n          className=\"secondary-button\"\n          onClick={() => {\n            window.open(\n              \"https://twitter.com/intent/tweet?url=https://saveourfaves.org&text=San%20Francisco%20businesses%20need%20us%20more%20than%20ever%20%E2%80%93%20gift%20cards%20can%20make%20a%20big%20difference.%20Please%20join%20me%20in%20supporting%20your%20favorite%20restaurants%20at\"\n            );\n          }}\n        >\n          Twitter\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default ShareOptions;\n","import \"./App.scss\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nimport { Button, Popover, Typography, Row, Col } from \"antd\";\nimport Areas from \"./CityData/Areas\";\n\nimport Config from \"./Config\";\nimport GoogleAnalyticsTag from \"./Components/GoogleAnalyticsTag\";\nimport FAQModal from \"./Components/FAQModal\";\nimport AddNewPlaceModal from \"./Components/AddNewPlaceModal\";\nimport NeighborhoodCards from \"./Components/NeighborhoodCards\";\nimport ShareOptions from \"./Components/ShareOptions\";\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n\nconst { Title } = Typography;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const path = window.location.pathname.slice(1).toLowerCase();\n    const currentArea = Areas[path] ? path : \"sf\";\n\n    this.state = {\n      faqVisible: false,\n      shareVisible: true,\n      currentArea: currentArea,\n      addPlaceVisible: path === \"addplace\"\n    };\n\n    this.selfRef = React.createRef();\n  }\n\n  showFAQModal() {\n    this.setState({ faqVisible: true });\n  }\n  hideFAQModal() {\n    this.setState({ faqVisible: false });\n  }\n  showShareModal() {\n    this.setState({ shareVisible: true });\n  }\n  hideShareModal() {\n    this.setState({ shareVisible: false });\n  }\n  hideAddModal() {\n    window.history.pushState({}, \"\", \"/\");\n    this.setState({ addPlaceVisible: false });\n  }\n  render() {\n    return (\n      <div>\n        <div style={{ marginTop: \"0px\" }}>\n          <FAQModal\n            shouldShow={this.state.faqVisible}\n            onClose={() => {\n              this.hideFAQModal();\n            }}\n          />\n\n          <Row className=\"hero-row\">\n            <div style={{ maxWidth: \"1100px\", margin: \"0px auto\" }}>\n              <Row className=\"top-header\">\n                <Col span={24} offset={0}>\n                  <Title style={{ float: \"left\", color: \"white\" }} level={4}>\n                    LoveLocals\n                  </Title>\n                  <div style={{ float: \"right\" }}>\n                    <a href=\"#\">\n                      <Title\n                        onClick={() => {\n                          this.showFAQModal();\n                        }}\n                        style={{\n                          color: \"white\",\n                          display: \"inline\",\n                          marginRight: \"16px\"\n                        }}\n                        level={4}\n                      >\n                        FAQ\n                      </Title>\n                    </a>\n                    <Popover content={<ShareOptions />}>\n                      <Button shape=\"round\" className=\"header-button\">\n                        Tell friends\n                      </Button>\n                    </Popover>\n                  </div>\n                </Col>\n              </Row>\n\n              <Col\n                xs={{ span: 18, offset: 3 }}\n                span={16}\n                offset={4}\n                style={{ textAlign: \"center\", padding: \"20px 0px\" }}\n              >\n                <Title\n                  level={1}\n                  style={{ color: \"white\", textAlign: \"center\" }}\n                >\n                  Your favorite Toronto restaurant might close forever. Help\n                  save it.\n                </Title>\n                <div className=\"header-sans\">\n                  Gift cards help \"flatten the curve\" of lost income from\n                  COVID-19.\n                </div>\n              </Col>\n              <Col sm={{ span: 20, offset: 2 }} lg={{ span: 20, offset: 2 }}>\n                <div className=\"main-results\">\n                  <div className=\"neighborhood-card-container-outer\">\n                    <NeighborhoodCards />\n                  </div>\n                </div>\n              </Col>\n              <Row className=\"footer-content\">\n                <Col offset={2} xs={18} style={{ textAlign: \"center\" }}>\n                  <Title level={3}>Our duty as loyal customers</Title>\n                  <p>\n                    Many businesses are in a difficult cash situation as social\n                    isolation and quarantine has forced most people to stay in\n                    their homes and non- essential businesses have closed their\n                    doors. Gift cards keep income flowing to local restaurateurs\n                    that are having to pay rent and other expenses while\n                    businesses are closed.\n                  </p>\n                </Col>\n              </Row>\n            </div>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}